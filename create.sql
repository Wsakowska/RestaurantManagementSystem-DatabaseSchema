-- Tworzenie tabeli: AdresCREATE TABLE Adres (    idAdres SERIAL PRIMARY KEY,    ulica VARCHAR(45) NOT NULL,    kod_pocztowy VARCHAR(10) NOT NULL,    miasto VARCHAR(55) NOT NULL,    nr_domu VARCHAR(45) NOT NULL);-- Tworzenie tabeli: KlientCREATE TABLE Klient (    idKlient SERIAL PRIMARY KEY,    idAdres INTEGER NOT NULL,    imie VARCHAR(45) NOT NULL,    nazwisko VARCHAR(45) NOT NULL,    email VARCHAR(55) UNIQUE NOT NULL,    nr_telefonu VARCHAR(15),    data_ostatniego_zamowienia DATE);-- Tworzenie tabeli: KategoriaCREATE TABLE Kategoria (    idKategoria SERIAL PRIMARY KEY,    nazwa_kategorii VARCHAR(45) NOT NULL UNIQUE);-- Tworzenie tabeli: MenuCREATE TABLE Menu (    idMenu SERIAL PRIMARY KEY,    idKategoria INTEGER NOT NULL,    nazwa VARCHAR(45) NOT NULL,    opis TEXT,    cena NUMERIC(10, 2) CHECK (cena > 0) NOT NULL,    dostepnosc BOOLEAN DEFAULT TRUE);-- Tworzenie tabeli: ZamowienieCREATE TABLE Zamowienie (    idZamowienie SERIAL PRIMARY KEY,    idKlient INTEGER NOT NULL,    data_zamowienia DATE DEFAULT CURRENT_DATE NOT NULL,    status_2 BOOLEAN DEFAULT FALSE,    laczna_kwota NUMERIC(10, 2) CHECK (laczna_kwota >= 0));-- Tworzenie tabeli: Pozycja_ZamowieniaCREATE TABLE Pozycja_Zamowienia (    idZamowienie INTEGER NOT NULL,    idMenu INTEGER NOT NULL,    ilosc INTEGER CHECK (ilosc > 0) NOT NULL,    cena_pozycji NUMERIC(10, 2) CHECK (cena_pozycji >= 0) NOT NULL,    PRIMARY KEY (idZamowienie, idMenu));-- Tworzenie tabeli: RecenzjaCREATE TABLE Recenzja (    idRecenzja SERIAL PRIMARY KEY,    idMenu INTEGER NOT NULL,    idKlient INTEGER NOT NULL,    idKategoria INTEGER NOT NULL,    ocena INTEGER CHECK (ocena >= 1 AND ocena <= 5) NOT NULL,    tresc TEXT);-- Tworzenie tabeli: DostawcaCREATE TABLE Dostawca (    idDostawca SERIAL PRIMARY KEY,    idAdres INTEGER NOT NULL,    nazwa_firmy VARCHAR(45) NOT NULL,    kontakt_telefon VARCHAR(15),    email VARCHAR(55) UNIQUE NOT NULL);-- Tworzenie tabeli: ZapotrzebowanieCREATE TABLE Zapotrzebowanie (    idZapotrzebowanie SERIAL PRIMARY KEY,    ilosc INTEGER CHECK (ilosc > 0) NOT NULL,    data_zapotrzebowania DATE NOT NULL);-- Tworzenie tabeli: SkladnikCREATE TABLE Skladnik (    idSkladnik SERIAL PRIMARY KEY,    idDostawca INTEGER NOT NULL,    idZapotrzebowanie INTEGER NOT NULL,    nazwa VARCHAR(45) NOT NULL);-- Tworzenie tabeli: PracownikCREATE TABLE Pracownik (    idPracownik SERIAL PRIMARY KEY,    idAdres INTEGER NOT NULL,    imie VARCHAR(45) NOT NULL,    nazwisko VARCHAR(45) NOT NULL,    stanowisko VARCHAR(45) NOT NULL,    data_zatrudnienia DATE NOT NULL);-- Tworzenie tabeli: Przydzial_PersoneluCREATE TABLE Przydzial_Personelu (    idPracownik INTEGER NOT NULL,    idZamowienie INTEGER NOT NULL,    data_przydzialu DATE NOT NULL,    role VARCHAR(45),    PRIMARY KEY (idPracownik, idZamowienie));-- Tworzenie tabeli: PromocjaCREATE TABLE Promocja (    idPromocja SERIAL PRIMARY KEY,    nazwa VARCHAR(45) NOT NULL,    opis TEXT,    data_rozpoczecia DATE NOT NULL,    data_zakonczenia DATE NOT NULL,    procent_znizki NUMERIC(5, 2) CHECK (procent_znizki >= 0 AND procent_znizki <= 100) NOT NULL);-- Tworzenie tabeli: Promocje_MenuCREATE TABLE Promocje_Menu (    idMenu INTEGER NOT NULL,    idPromocja INTEGER NOT NULL,    PRIMARY KEY (idMenu, idPromocja));-- Tworzenie tabeli: Logi_PracownikowCREATE TABLE Logi_Pracownikow (    idLog SERIAL PRIMARY KEY,    idPracownik INTEGER NOT NULL,    staryStanowisko VARCHAR(45),    noweStanowisko VARCHAR(45),    dataZmiany DATE NOT NULL);-- Dodawanie kluczy obcych /* ALTER TABLE Klient ADD CONSTRAINT fk_klient_adres FOREIGN KEY (idAdres) REFERENCES Adres(idAdres) ON DELETE CASCADE;ALTER TABLE Menu ADD CONSTRAINT fk_menu_kategoria FOREIGN KEY (idKategoria) REFERENCES Kategoria(idKategoria) ON DELETE SET NULL;ALTER TABLE Zamowienie ADD CONSTRAINT fk_zamowienie_klient FOREIGN KEY (idKlient) REFERENCES Klient(idKlient) ON DELETE CASCADE;ALTER TABLE Pozycja_Zamowienia ADD CONSTRAINT fk_pozycja_zamowienia_zamowienie FOREIGN KEY (idZamowienie) REFERENCES Zamowienie(idZamowienie) ON DELETE CASCADE;ALTER TABLE Pozycja_Zamowienia ADD CONSTRAINT fk_pozycja_zamowienia_menu FOREIGN KEY (idMenu) REFERENCES Menu(idMenu) ON DELETE CASCADE;ALTER TABLE Recenzja ADD CONSTRAINT fk_recenzja_menu FOREIGN KEY (idMenu) REFERENCES Menu(idMenu) ON DELETE CASCADE;ALTER TABLE Recenzja ADD CONSTRAINT fk_recenzja_klient FOREIGN KEY (idKlient) REFERENCES Klient(idKlient) ON DELETE CASCADE;ALTER TABLE Recenzja ADD CONSTRAINT fk_recenzja_kategoria FOREIGN KEY (idKategoria) REFERENCES Kategoria(idKategoria) ON DELETE SET NULL;ALTER TABLE Dostawca ADD CONSTRAINT fk_dostawca_adres FOREIGN KEY (idAdres) REFERENCES Adres(idAdres) ON DELETE CASCADE;ALTER TABLE Skladnik ADD CONSTRAINT fk_skladnik_dostawca FOREIGN KEY (idDostawca) REFERENCES Dostawca(idDostawca) ON DELETE CASCADE;ALTER TABLE Skladnik ADD CONSTRAINT fk_skladnik_zapotrzebowanie FOREIGN KEY (idZapotrzebowanie) REFERENCES Zapotrzebowanie(idZapotrzebowanie) ON DELETE CASCADE;ALTER TABLE Pracownik ADD CONSTRAINT fk_pracownik_adres FOREIGN KEY (idAdres) REFERENCES Adres(idAdres) ON DELETE CASCADE;ALTER TABLE Przydzial_Personelu ADD CONSTRAINT fk_przydzial_personelu_pracownik FOREIGN KEY (idPracownik) REFERENCES Pracownik(idPracownik) ON DELETE CASCADE;ALTER TABLE Przydzial_Personelu ADD CONSTRAINT fk_przydzial_personelu_zamowienie FOREIGN KEY (idZamowienie) REFERENCES Zamowienie(idZamowienie) ON DELETE CASCADE;ALTER TABLE Promocje_Menu ADD CONSTRAINT fk_promocje_menu_menu FOREIGN KEY (idMenu) REFERENCES Menu(idMenu) ON DELETE CASCADE;ALTER TABLE Promocje_Menu ADD CONSTRAINT fk_promocje_menu_promocja FOREIGN KEY (idPromocja) REFERENCES Promocja(idPromocja) ON DELETE CASCADE;ALTER TABLE Logi_Pracownikow ADD CONSTRAINT fk_id_pracownik FOREIGN KEY (idPracownik) REFERENCES Pracownik(idPracownik) ON DELETE CASCADE; */